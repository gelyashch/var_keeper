# Создано с помощью https://www.toptal.com/developers/gitignore/api/python,flask
# Отредактируйте на https://www.toptal.com/developers/gitignore?templates=python,flask

### Flask ###
instance/*
!instance/.gitignore
.webassets-cache
.env

### Flask.Python Stack ###
# Файлы, скомпилированные / оптимизированные / DLL
__pycache__/
*.py[cod]
*$py.class

# Расширения C
*.so

# Распространение / упаковка
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/ 
.установлено.cfg
*.egg
МАНИФЕСТ

# PyInstaller
# Обычно эти файлы записываются скриптом python из шаблона
# перед тем, как PyInstaller соберет exe-файл, чтобы ввести в него дату / другую информацию.
* .манифест 
* .спецификация

# Журналы установки 
pip-log.txt 
pip-delete-this-directory.txt

# Модульное тестирование / отчеты о покрытии 
htmlcov/
.токсин/
.nox/
.покрытие 
.покрытие .*
.кэш 
nosetests.xml 
coverage.xml 
*.обложка 
*.py, обложка 
.гипотеза/
.pytest_cache/
обложка/

# Переводы
*.mo 
*.pot

# Материал Django:
* .log 
local_settings.py 
db.sqlite3 
db.sqlite3-журнал

# Материал Flask: 
экземпляр/

# Материал Scrapy:
.scrapy

# Документация Sphinx
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython 
profile_default/
ipython_config.py

# pyenv
# Для библиотеки или пакета вы можете проигнорировать эти файлы, поскольку код
# предназначен для запуска в нескольких средах; в противном случае проверьте их в:
# .python-версия

# pipenv
# Согласно pypa / pipenv # 598, рекомендуется включать Pipfile .заблокируйте систему управления версиями.
# Однако, в случае совместной работы, при наличии зависимостей от конкретной платформы или dependencies
# при отсутствии кроссплатформенной поддержки pipenv может установить зависимости, которые не работают, или нет
# установите все необходимые зависимости.
#Pipfile.блокировка

# poetry
# Аналогично Pipfile.lock, обычно рекомендуется включать poetry.блокировка в системе управления версиями.
# Это особенно рекомендуется для двоичных пакетов для обеспечения воспроизводимости и чаще всего игнорируется для библиотек.
#
# https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
# Как и в случае с Pipfile.lock, обычно рекомендуется включать pdm.lock в систему контроля версий.
#pdm.lock
# pdm хранит конфигурации для всего проекта в .pdm.toml, но рекомендуется не включать его
# в систему контроля версий.
# https://pdm.fming.dev/#использование-с-IDE
.pdm.toml

# PEP 582; используется, например, в github.com/David-OConnor/pyflow и github.com/pdm-project/pdm
__pypackages__/

# Файлы Celery
celerybeat-schedule
celerybeat.pid

# Файлы, проанализированные SageMath
*.sage.py

# Среды
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Настройки проекта Spyder
.spyderproject
.spyproject

# Настройки проекта Rope
.ropeproject

# Документация mkdocs
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Проверка типов Pyre
.pyre/

# Статический анализатор типов pytype
.pytype/

# Отладочные символы Cython
cython_debug/

# PyCharm
# Шаблон JetBrains хранится в отдельном файле JetBrains.gitignore, который можно
# найти по адресу https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# и добавить в глобальный файл gitignore или объединить с этим файлом. Для более радикального
# варианта (не рекомендуется) вы можете раскомментировать следующее, чтобы игнорировать всю папку idea.
#.idea/

### Python ###
# Байт-скомпилированные / оптимизированные / файлы DLL

# Расширения C

# Распространение / упаковка

# PyInstaller
# Обычно эти файлы создаются скриптом Python из шаблона
# перед сборкой PyInstaller, чтобы добавить в него дату/другую информацию. 

# Журналы установщика

# Отчеты о модульном тестировании / покрытии

# Переводы

# Материал Django:

# Материал Flask:

# Материал Scrapy:

# Документация Sphinx

# PyBuilder

# Записная книжка Jupyter

# IPython

# pyenv
# Для библиотеки или пакета вы можете проигнорировать эти файлы, поскольку код
# предназначен для запуска в нескольких средах; в противном случае проверьте их в:
# .python-версия

# pipenv
# Согласно pypa / pipenv #598, рекомендуется включать Pipfile.блокировка в системе управления версиями.
# Однако, в случае совместной работы, при наличии зависимостей, зависящих от платформы
# не имея кроссплатформенной поддержки, pipenv может установить зависимости, которые не работают, или нет
# установите все необходимые зависимости.

# поэзия
# Аналогично Pipfile.блокировка, обычно рекомендуется включать poetry.блокировка в системе управления версиями.
# Это особенно рекомендуется для двоичных пакетов, чтобы обеспечить воспроизводимость, и чаще
# игнорируется для библиотек.
# https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control

# pdm
# Как и в случае с Pipfile.lock, обычно рекомендуется включать pdm.lock в систему контроля версий.
# pdm хранит общесистемные конфигурации в .pdm.toml, но рекомендуется не включать его
# в систему контроля версий.
# https://pdm.fming.dev/#use-with-ide

# PEP 582; используется, например, в github.com/David-OConnor/pyflow и github.com/pdm-project/pdm

# Вещи, связанные с Celery

# Файлы, проанализированные SageMath

# Среды

# Настройки проекта Spyder

# Настройки проекта Rope

# документация mkdocs

# mypy

# Проверка типов Pyre

# статический анализатор типов pytype

# Символы отладки Cython

# PyCharm
 Конкретный шаблон # JetBrains поддерживается в отдельном файле JetBrains.gitignore, который можно
# найти по ссылке https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# и который можно добавить в глобальный файл gitignore или объединить с этим файлом. Для более радикального
# варианта (не рекомендуется) вы можете раскомментировать следующее, чтобы игнорировать всю папку с идеями.

### Патч Python ###
# Файл локальной конфигурации Poetry — https://python-poetry.org/docs/configuration/#local-configuration
poetry.toml

# ruff
.ruff_cache/

# Файлы конфигурации LSP
pyrightconfig.json

# Конец https://www.toptal.com/developers/gitignore/api/python,flask
